//common.js//共通処理///// 一覧表示データ取得function getItemList() {    var p_list = localStorage.getItem("memo_list");    if (p_list) {        return JSON.parse(p_list);    } else {        return new Array();    }}///// 照会表示データ取得function getItem(x_key) {    var p_list = getItemList();     if(p_list) {        for (var i in p_list) {            if(p_list[i].id == x_key) {                alert("match key="+p_list[i].id);                var p_item = new Array();                p_item.push({                    id:p_list[i].id                    , title:p_list[i].title                    , description:p_list[i].description                    , important:p_list[i].important//                    , endflg:p_list[i].endflg                    , startdate:p_list[i].startdate //                    , enddate:p_list[i].enddate                });                return p_item;            }        }    }}///// メモ削除function deleteItem(x_key) {//    localStorage.removeItem(x_key)        var p_list = getItemList();    for (var i in p_list) {        if (p_list[i].id == x_key) {            p_list.splice(i, 1);  //ID該当の行を1行削除            break;        }    }    saveItemList(p_list);}///// メモ追加function addItem(x_data) {    alert("addItem");    var p_id = x_data[0].id;     if (p_id) {        alert("update");        //更新の場合（一覧から引き継いだIDが存在する場合）、更新前データをリストから削除してから新規追加する        deleteItem(p_id);    }    var p_list = getItemList();    var p_time = new Date().getTime();        alert("登録値："        + "id:"+p_time        + ",title:"+x_data[0].title        + ",description:"+ x_data[0].description        + ",important:"+ x_data[0].important//        + ",endflg:"+ x_data[0].endflg        + ",startdate:"+ x_data[0].startdate//        + ",enddate:"+ x_data[0].enddate                );    p_list.push({          id: p_time        , title: x_data[0].title        , description: x_data[0].description        , important: x_data[0].important        //        , endflg: x_data[0].endflg        , startdate: x_data[0].startdate//        , enddate: x_data[0].enddate        });    saveItemList(p_list);}///// データ保存function saveItemList(x_item) {    try {        localStorage.setItem("memo_list", JSON.stringify(x_item));    } catch (e) {        alert('Error saving to storage.');        throw e;    }}///// フォームデータ取得function getFormValue() {        alert("getFormValue s");        var p_id            = $("#todo-id").val();        var p_title         = $("#todo-title").val();        var p_description   = $("#todo-description").val();        var p_important     = $("[name='todo-important']").filter(':checked').val();//        var p_endflg        = $("#todo-endflg").val();        var p_startdate     = $("#todo-startdate").val();//        var p_enddate       = $("#todo-enddate").val();        alert('取得値：'        + '/id:'+ p_id        + '/title:'+ p_title        + '/description:'+ p_description        + '/important' + p_important//        + '/endflg' + p_endflg        + '/startdate' + p_startdate//        + '/enddate' + p_enddate        );        var p_data = new Array();        p_data.push({                id:p_id                , title:p_title                , description:p_description                , important:p_important//                , endflg:p_endflg                , startdate:p_startdate //                , enddate:p_enddate                });        alert("getFormValue e");        return p_data;}///// フォームバリューセットfunction setFormValue(x_item) {    alert('setFormValue s セット値取得：'        + '/id:'+ x_item[0].id        + '/title:'+ x_item[0].title        + '/description:'+ x_item[0].description        + '/important' + x_item[0].important//        + '/endflg' + x_item[0].endflg        + '/startdate' + x_item[0].startdate//        + '/enddate' + x_item[0].enddate    );        $("#todo-id").val(x_item[0].id);        $("#todo-title").val(x_item[0].title);        $("#todo-description").val(x_item[0].description);        //再描画時の不具合のため引数無しでcheckboxradioをコールしてからリフレッシュを実施        $("[name='todo-important']").val([x_item[0].important]).checkboxradio();        $("[name='todo-important']").checkboxradio('refresh',true);        //        $("#todo-endflg").val(x_item[0].endflg);        $("#todo-startdate").val(x_item[0].startdate);//        $("#todo-enddate").val(x_item[0].enddate);    alert("setFormValue e");}///// フォームバリュークリアfunction clearFormValue() {        $("#todo-id").val("");        $("#todo-title").val("");        $("#todo-description").val("");                //再描画時の不具合のため引数無しでcheckboxradioをコールしてからリフレッシュを実施        $("[name='todo-important']").val(['2']).checkboxradio();        $("[name='todo-important']").checkboxradio('refresh',true);//        $("#todo-endflg").prop({'checked':false});        $("#todo-startdate").val("");//        $("#todo-enddate").val("");                //ログ出力        p_id            = $("#todo-id").val();        p_title         = $("#todo-title").val();        p_description   = $("#todo-description").val();        p_important     = $("[name='todo-important']").filter(':checked').val();//        p_endflg        = $("#todo-endflg").val();        p_startdate     = $("#todo-startdate").val();//        p_enddate       = $("#todo-enddate").val();        alert('clearFormValue e クリア後取得値：'        + '/id:'+ p_id        + '/title:'+ p_title        + '/description:'+ p_description        + '/important' + p_important//        + '/endflg' + p_endflg        + '/startdate' + p_startdate//        + '/enddate' + p_enddate        );}// user agent//function getAgent () {//    var agent = navigator.userAgent,ua = '';//	if(agent.search(/iPhone/) != -1){//		ua = 'ios'//	}else if(agent.search(/Android/) != -1){//		ua = 'android'//	}	//};